{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hosut\\\\Downloads\\\\Projects\\\\React\\\\my-portfolio\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const messageContainerRef = useRef(null); // Reference for the message container\n\n  const toggleChatbox = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const sendMessage = async () => {\n    if (!inputValue.trim()) return;\n    const userMessage = {\n      name: 'Visitor',\n      message: inputValue\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n\n    // Call the Flask backend\n    try {\n      const response = await fetch('http://127.0.0.1:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputValue\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        name: 'Kirsy',\n        message: data.answer\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setInputValue('');\n  };\n\n  // Auto-scroll to the bottom when a new message is added\n  useEffect(() => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [messages]); // Run this effect whenever `messages` updates\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbox ${isOpen ? 'chatbox--active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox__header\",\n      onClick: toggleChatbox,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Have a question about me?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox__messages\",\n        ref: messageContainerRef,\n        style: {\n          maxHeight: '300px',\n          overflowY: 'auto'\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.name === 'Visitor' ? 'user-message' : 'bot-message',\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chatbox__footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Write a message...\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onKeyPress: e => e.key === 'Enter' && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"BC+7Kv+d//WphlG9U+6lk4/CpJ8=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Chatbox","_s","isOpen","setIsOpen","messages","setMessages","inputValue","setInputValue","messageContainerRef","toggleChatbox","handleInputChange","e","target","value","sendMessage","trim","userMessage","name","message","prevMessages","response","fetch","method","headers","body","JSON","stringify","data","json","botMessage","answer","error","console","current","scrollTop","scrollHeight","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","maxHeight","overflowY","map","msg","index","class","type","placeholder","onChange","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/Users/hosut/Downloads/Projects/React/my-portfolio/src/components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Chatbox = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const messageContainerRef = useRef(null);  // Reference for the message container\r\n\r\n  const toggleChatbox = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const userMessage = { name: 'Visitor', message: inputValue };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n    // Call the Flask backend\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/predict', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: inputValue }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = { name: 'Kirsy', message: data.answer };\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n\r\n    setInputValue('');\r\n  };\r\n\r\n  // Auto-scroll to the bottom when a new message is added\r\n  useEffect(() => {\r\n    if (messageContainerRef.current) {\r\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);  // Run this effect whenever `messages` updates\r\n\r\n  return (\r\n    <div className={`chatbox ${isOpen ? 'chatbox--active' : ''}`}>\r\n      <div className=\"chatbox__header\" onClick={toggleChatbox}>\r\n        <h4>Have a question about me?</h4>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"chatbox__content\">\r\n          <div className=\"chatbox__messages\" ref={messageContainerRef} style={{ maxHeight: '300px', overflowY: 'auto' }}>\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={msg.name === 'Visitor' ? 'user-message' : 'bot-message'}>\r\n                <strong>{msg.name}:</strong> {msg.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div class=\"chatbox__footer\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Write a message...\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n           </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}