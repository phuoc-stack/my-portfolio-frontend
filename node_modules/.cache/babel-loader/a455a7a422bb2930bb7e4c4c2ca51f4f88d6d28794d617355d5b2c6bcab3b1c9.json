{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbox=()=>{const[isOpen,setIsOpen]=useState(false);const[messages,setMessages]=useState([]);const[inputValue,setInputValue]=useState('');const messageContainerRef=useRef(null);// Reference for the message container\nconst toggleChatbox=()=>{setIsOpen(!isOpen);};const handleInputChange=e=>{setInputValue(e.target.value);};const sendMessage=async()=>{if(!inputValue.trim())return;const userMessage={name:'Visitor',message:inputValue};setMessages(prevMessages=>[...prevMessages,userMessage]);// Call the Flask backend\ntry{const response=await fetch('http://127.0.0.1:5000/predict',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:inputValue})});const data=await response.json();const botMessage={name:'Kirsy',message:data.answer};setMessages(prevMessages=>[...prevMessages,botMessage]);}catch(error){console.error('Error:',error);}setInputValue('');};// Auto-scroll to the bottom when a new message is added\nuseEffect(()=>{if(messageContainerRef.current){messageContainerRef.current.scrollTop=messageContainerRef.current.scrollHeight;}},[messages]);// Run this effect whenever `messages` updates\nreturn/*#__PURE__*/_jsxs(\"div\",{className:`chatbox ${isOpen?'chatbox--active':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatbox__header\",onClick:toggleChatbox,children:/*#__PURE__*/_jsx(\"h4\",{children:\"Have a question about me?\"})}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"chatbox__content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatbox__messages\",ref:messageContainerRef,style:{maxHeight:'300px',overflowY:'auto'},children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:msg.name==='Visitor'?'user-message':'bot-message',children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.name,\":\"]}),\" \",msg.message]},index))}),/*#__PURE__*/_jsxs(\"div\",{class:\"chatbox__footer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Write a message...\",value:inputValue,onChange:handleInputChange,onKeyPress:e=>e.key==='Enter'&&sendMessage()}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]})]});};export default Chatbox;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","Chatbox","isOpen","setIsOpen","messages","setMessages","inputValue","setInputValue","messageContainerRef","toggleChatbox","handleInputChange","e","target","value","sendMessage","trim","userMessage","name","message","prevMessages","response","fetch","method","headers","body","JSON","stringify","data","json","botMessage","answer","error","console","current","scrollTop","scrollHeight","className","children","onClick","ref","style","maxHeight","overflowY","map","msg","index","class","type","placeholder","onChange","onKeyPress","key"],"sources":["C:/Users/hosut/Downloads/Projects/React/my-portfolio/src/components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Chatbox = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const messageContainerRef = useRef(null);  // Reference for the message container\r\n\r\n  const toggleChatbox = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const userMessage = { name: 'Visitor', message: inputValue };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n    // Call the Flask backend\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/predict', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: inputValue }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = { name: 'Kirsy', message: data.answer };\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n\r\n    setInputValue('');\r\n  };\r\n\r\n  // Auto-scroll to the bottom when a new message is added\r\n  useEffect(() => {\r\n    if (messageContainerRef.current) {\r\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);  // Run this effect whenever `messages` updates\r\n\r\n  return (\r\n    <div className={`chatbox ${isOpen ? 'chatbox--active' : ''}`}>\r\n      <div className=\"chatbox__header\" onClick={toggleChatbox}>\r\n        <h4>Have a question about me?</h4>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"chatbox__content\">\r\n          <div className=\"chatbox__messages\" ref={messageContainerRef} style={{ maxHeight: '300px', overflowY: 'auto' }}>\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={msg.name === 'Visitor' ? 'user-message' : 'bot-message'}>\r\n                <strong>{msg.name}:</strong> {msg.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div class=\"chatbox__footer\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Write a message...\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n           </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3D,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAY,mBAAmB,CAAGb,MAAM,CAAC,IAAI,CAAC,CAAG;AAE3C,KAAM,CAAAc,aAAa,CAAGA,CAAA,GAAM,CAC1BN,SAAS,CAAC,CAACD,MAAM,CAAC,CACpB,CAAC,CAED,KAAM,CAAAQ,iBAAiB,CAAIC,CAAC,EAAK,CAC/BJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,CAAE,OAExB,KAAM,CAAAC,WAAW,CAAG,CAAEC,IAAI,CAAE,SAAS,CAAEC,OAAO,CAAEZ,UAAW,CAAC,CAC5DD,WAAW,CAAEc,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAEH,WAAW,CAAC,CAAC,CAE7D;AACA,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC5DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,OAAO,CAAEZ,UAAW,CAAC,CAC9C,CAAC,CAAC,CAEF,KAAM,CAAAqB,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,UAAU,CAAG,CAAEZ,IAAI,CAAE,OAAO,CAAEC,OAAO,CAAES,IAAI,CAACG,MAAO,CAAC,CAC1DzB,WAAW,CAAEc,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAEU,UAAU,CAAC,CAAC,CAC9D,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAChC,CAEAxB,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,CAED;AACAb,SAAS,CAAC,IAAM,CACd,GAAIc,mBAAmB,CAACyB,OAAO,CAAE,CAC/BzB,mBAAmB,CAACyB,OAAO,CAACC,SAAS,CAAG1B,mBAAmB,CAACyB,OAAO,CAACE,YAAY,CAClF,CACF,CAAC,CAAE,CAAC/B,QAAQ,CAAC,CAAC,CAAG;AAEjB,mBACEJ,KAAA,QAAKoC,SAAS,CAAE,WAAWlC,MAAM,CAAG,iBAAiB,CAAG,EAAE,EAAG,CAAAmC,QAAA,eAC3DvC,IAAA,QAAKsC,SAAS,CAAC,iBAAiB,CAACE,OAAO,CAAE7B,aAAc,CAAA4B,QAAA,cACtDvC,IAAA,OAAAuC,QAAA,CAAI,2BAAyB,CAAI,CAAC,CAC/B,CAAC,CACLnC,MAAM,eACLF,KAAA,QAAKoC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BvC,IAAA,QAAKsC,SAAS,CAAC,mBAAmB,CAACG,GAAG,CAAE/B,mBAAoB,CAACgC,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAO,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAL,QAAA,CAC3GjC,QAAQ,CAACuC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACvB7C,KAAA,QAAiBoC,SAAS,CAAEQ,GAAG,CAAC3B,IAAI,GAAK,SAAS,CAAG,cAAc,CAAG,aAAc,CAAAoB,QAAA,eAClFrC,KAAA,WAAAqC,QAAA,EAASO,GAAG,CAAC3B,IAAI,CAAC,GAAC,EAAQ,CAAC,IAAC,CAAC2B,GAAG,CAAC1B,OAAO,GADjC2B,KAEL,CACN,CAAC,CACC,CAAC,cACN7C,KAAA,QAAK8C,KAAK,CAAC,iBAAiB,CAAAT,QAAA,eAC5BvC,IAAA,UACEiD,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,oBAAoB,CAChCnC,KAAK,CAAEP,UAAW,CAClB2C,QAAQ,CAAEvC,iBAAkB,CAC5BwC,UAAU,CAAGvC,CAAC,EAAKA,CAAC,CAACwC,GAAG,GAAK,OAAO,EAAIrC,WAAW,CAAC,CAAE,CACvD,CAAC,cACFhB,IAAA,WAAQwC,OAAO,CAAExB,WAAY,CAAAuB,QAAA,CAAC,MAAI,CAAQ,CAAC,EACrC,CAAC,EACJ,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAApC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}